  @Get('getCurrentHotList')
  @hasModulePermission(moduleType.hotListing)
  @UseInterceptors(TransformInterceptor)
  getCurrentHotList() {
    return this.propertyWalletHotListingService.getCurrentHotList();
  }


----------------------

  async getCurrentHotList(): Promise <ResponseDto> {

    try{
      const PWHotListingRepo = getRepository(PropertyWalletHotListing)

      // const timestamp: Date = new Date();
      // const isoString: string = timestamp.toISOString();
      // const today: string = isoString.replace("Z", "+00:00");
      // console.log(`createdAt: ${today}`);


      const today = new Date().toISOString().split('T')[0]
      console.log(today)
      
      const Result  = PWHotListingRepo.createQueryBuilder('hot')
      .where("hot.status = :status AND DATE(hot.createdAt) <= :today", { status: 'OPEN', today })
      .orderBy('hot.createdAt', 'DESC')
      const Data = await Result.getMany()
       console.log(Data)

      return { message: commonMessage.get , data : Data}

    }catch(err){
      throw new InternalServerErrorException(err)
    }
  }